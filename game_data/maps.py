from __future__ import absolute_import, division, print_function, unicode_literals

from enums.level_locations import LevelLocation
from enums.colors import Pair
from game_data.tiles import TileImpl
from level_template import LevelTemplate
from monster_template import MonsterTemplate
from world_template import WorldTemplate


DUNGEON = "dungeon"
FIRST_LEVEL = (DUNGEON, 1)

tiles = {
    '.': TileImpl.Floor.value,
    'w': TileImpl.Wall.value,
    '#': TileImpl.Dynamic_Wall.value,
    'r': TileImpl.Rock.value,
    '/': TileImpl.Open_Door.value,
    '+': TileImpl.Closed_Door.value,
    '"': TileImpl.Grass.value,
    '>': TileImpl.Stairs_Down.value,
    '<': TileImpl.Stairs_Up.value,
}


def get_world_template():

    world = WorldTemplate()
    world.add_first_level_info(FIRST_LEVEL, LevelLocation.Passage_Up)

    L0 = LevelTemplate(
        danger_level=1,
        use_dynamic_monsters=False,
        tilemap=to_tiles(
            "################################################################################################"
            "#######################..##################.#.#.#######.....####################################"
            "######...##############.#.################.#.#.#.#####.####.###......###########################"
            "######.##..############.##..#############.######.#..###.###.###.####.###########################"
            "#######.###...##.######.####.######.....##.#####.#.#.##.###.....###..###.#######################"
            "########.######...#####.#####.#####.###.###.####...##.##.##########.###.#.######################"
            "###.#####.####..#######.######.####...#.###.##########.#.##########.##.##.######################"
            "###.######.###.########.######.######.#.###.########...#.##########....##.######################"
            "###.#######.##.########.######.######.#.###.########.###.################.######################"
            "###..........##.#######.######.#####.##.....########.###.################.######################"
            "###.#######..###.######.##...#.####.################.....########.........######################"
            "###.######...####.#####.##.#...###.##############################.##############################"
            "###.#.###...######.####.##.######.###############################.###...########################"
            "####.#.##..########.###.###.####.################################.##.##........#################"
            "###.#.##.###########.##.####.##.#################################...##########.#################"
            "####.####.###########.#.#####..###############################################.#################"
            "##########.#########.##.######################################################...###############"
            "###########.#######.###.########################################################.###############"
            "############.#####.####........................................................##.##############"
            "#############.###.####.########################################################..>##############"
            "##############.#.##...##########################################################################"
            "###############.###.#.##########################################################################"
            "###############.###...##############################.....................#######################"
            "###############<...###...................................................#######################"
            "#######################################..................................#######################"
            "################################################################################################"
        ),
        static_monster_seq=(
            MonsterTemplate("The Crone", ('@', Pair.Purple)),
        )
    )
    world.add_level(DUNGEON, L0)

    for x in range(99 - 1):
        world.add_level(DUNGEON)

    return world


def to_tiles(charmap):
    return [tiles[char] for char in charmap]
