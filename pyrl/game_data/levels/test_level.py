from __future__ import annotations

from pyrl.engine.creature.creature import Creature
from pyrl.engine.creature.player import Player
from pyrl.engine.types.glyphs import Colors
from pyrl.engine.world.level_gen_params import LevelGenParams
from pyrl.engine.world.world_types import LevelGen
from pyrl.game_data.levels.shared_assets import construct_data, default_dims, DefaultLocation, AssetTileDict, \
    AssetLocationDict, AssetCreatureDict
from pyrl.game_data.pyrl_tiles import PyrlTiles

def get_level(player: Player) -> LevelGenParams:

    dimensions = default_dims
    table_data = (
        '################################################################################################'
        '#######################..##################.#.#.#######.....#################################.##'
        '######...##############.#.################.#.#.#.#####.####.###......#######################.@.#'
        '######.##..############.##..#############.######.#..###.###.###.####.########################.##'
        '#######.###...##.######.####.######.....##.#####.#.#.##.###.....###..###.#######################'
        '########.######...#####.#####.#####.###.###.####...##.##.##########.###.#.######################'
        '###.#####.####..#######.######.####...#.###.##########.#.##########.##.##.######################'
        '###.######.###.########.######.######.#.###.########...#.##########....##.######################'
        '###.#######.##.########.######.######.#.###.########.###.################.######################'
        '###..........##.#######.######.#####.##.....########.###.################.######################'
        '###.#######..###.######.##...#.####.################.....########.........######################'
        '###.######...####.#####.##.#...###.##############################.##############################'
        '###.#.###...######.####.##.######.###############################.###...########################'
        '####.#.##..########.###.###.####.################################.##.##........#################'
        '###.#.##.###########.##.####.##.#################################...##########.#################'
        '####.####.###########.#.#####..###############################################.#################'
        '##########.#########.##.######################################################...###############'
        '###########.#######.###.########################################################.###############'
        '############.#####.####........................................................##.##############'
        '#############.###.####.########################################################..>##############'
        '##############.#.##...##########################################################################'
        '###############.###.#.##########################################################################'
        '###############.###...##############################.....................#######################'
        '###############P...###...................................................#######################'
        '#######################################..................................#######################'
        '################################################################################################'
    )
    custom_tiles: AssetTileDict = {
        'P': PyrlTiles.Stairs_Up,
        '@': PyrlTiles.Floor,
    }
    custom_locations: AssetLocationDict = {
        'P': DefaultLocation.Passage_Up,
    }
    custom_creatures: AssetCreatureDict = {
        '@': Creature("The Crone", ('@', Colors.Purple)),
        'P': player,
    }
    level_data = custom_tiles, custom_locations, custom_creatures
    tiles, locations, creatures = construct_data(dimensions, table_data, *level_data)

    return LevelGenParams(
        dimensions=dimensions,
        area_level=0,
        tiles=tiles,
        locations=locations,
        custom_creatures=creatures,
        initial_creature_spawns=False,
        ongoing_creature_spawns=False,
        generation_type=LevelGen.NoGeneration,
    )
